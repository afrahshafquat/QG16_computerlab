number.of.students <- 50
male.ratio <- 0.4
number.of.males <- number.of.students * male.ratio
number.of.females <- number.of.students * (1 - male.ratio)
# Chunk 14
number.of.males
number.of.females
# Chunk 15
example.vector <- c(1.1,3,5.3,7,9.0)
example.vector
example.vector2 <- 1:10
example.vector2
example.vector3 <- seq(from=1, to = 12, by = 3)
example.vector3
# Chunk 16
example.vector[3]
# access multiple values
example.vector2[c(1,2)]
# access every value except position 2
example.vector2[-2]
# Chunk 17
# get the maximum value
max(example.vector3)
# get the minimum value
min(example.vector3)
# get the mean
mean(example.vector3)
# Chunk 18
character.vector1 <- c("R", "is", "easy","free","great")
character.vector1
character.vector1[c(1,2,3)]
character.vector1[c(1,2,5)]
character.vector1[-c(3,5)]
class(character.vector1)
class(example.vector)
class(example.vector2)
example.matrix1 <- matrix(1:6, nrow = 2)
dim(example.matrix1)
character.matrix <- matrix(c("a","b","c","d","e","f"), nrow = 2, ncol = 3, byrow=TRUE)
character.matrix
mode(example.matrix4)
# Chunk 6
dir()
list.files()  # does the same thing
# Chunk 7
101+127
# Chunk 8
2 * 4
# Chunk 9
6 / 3
# Chunk 10
( (6 / 3) + ( 9 / (1+2) ) - 2.3 )^2
# Chunk 11
log(10)     # log with base e
log2(8)     # log with base 2
log10(1000) # log with base 10
exp(4)      # exponentials
sqrt(36)    # square roots
abs( 10 - 15 ) # absolute values
# Chunk 12
?log
?log10
# Chunk 13
number.of.students <- 50
male.ratio <- 0.4
number.of.males <- number.of.students * male.ratio
number.of.females <- number.of.students * (1 - male.ratio)
# Chunk 14
number.of.males
number.of.females
# Chunk 15
example.vector <- c(1.1,3,5.3,7,9.0)
example.vector
example.vector2 <- 1:10
example.vector2
example.vector3 <- seq(from=1, to = 12, by = 3)
example.vector3
# Chunk 16
example.vector[3]
# access multiple values
example.vector2[c(1,2)]
# access every value except position 2
example.vector2[-2]
# Chunk 17
# get the maximum value
max(example.vector3)
# get the minimum value
min(example.vector3)
# get the mean
mean(example.vector3)
# Chunk 18
character.vector1 <- c("R", "is", "easy","free","great")
character.vector1
character.vector1[c(1,2,3)]
character.vector1[c(1,2,5)]
character.vector1[-c(3,5)]
# Chunk 19
class(character.vector1)
class(example.vector)
class(example.vector2)
# Chunk 21
example.matrix1 <- matrix(1:6, nrow = 2)
example.matrix2 <- matrix(1:6, ncol = 2)
example.matrix3 <- matrix(1:6, nrow = 2, ncol = 3)
example.matrix4 <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
example.matrix1
example.matrix2
example.matrix3
example.matrix4
# Chunk 22
dim(example.matrix4)
# The results are row x columns
# Chunk 23
example.matrix4[1,2]
example.matrix4[1:2,1]
# selecting a row
example.matrix4[1,]
# selecting a column
example.matrix4[,2]
# Chunk 24
t(example.matrix4)
# Chunk 25
rownames(example.matrix4) <- c("row1","row2")
colnames(example.matrix4) <- c("column1","column2","column3")
example.matrix4
character.matrix <- matrix(c("a","b","c","d","e","f"), nrow = 2, ncol = 3, byrow=TRUE)
character.matrix
mode(example.matrix4)
mode(character.matrix)
character.matrix
example.matrix
example.matrix4
?mode
question2 <- matrix(c(1,2,3), nrow = 2, ncol = 3, byrow = TRUE)
question3 <- matrix(c(1,2,3,4), nrow = 2, ncol = 3, byrow = TRUE)
# Chunk 6
dir()
list.files()  # does the same thing
# Chunk 7
101+127
# Chunk 8
2 * 4
# Chunk 9
6 / 3
# Chunk 10
( (6 / 3) + ( 9 / (1+2) ) - 2.3 )^2
# Chunk 11
log(10)     # log with base e
log2(8)     # log with base 2
log10(1000) # log with base 10
exp(4)      # exponentials
sqrt(36)    # square roots
abs( 10 - 15 ) # absolute values
# Chunk 12
?log
?log10
# Chunk 13
number.of.students <- 50
male.ratio <- 0.4
number.of.males <- number.of.students * male.ratio
number.of.females <- number.of.students * (1 - male.ratio)
# Chunk 14
number.of.males
number.of.females
# Chunk 15
example.vector <- c(1.1,3,5.3,7,9.0)
example.vector
example.vector2 <- 1:10
example.vector2
example.vector3 <- seq(from=1, to = 12, by = 3)
example.vector3
# Chunk 16
example.vector[3]
# access multiple values
example.vector2[c(1,2)]
# access every value except position 2
example.vector2[-2]
# Chunk 17
# get the maximum value
max(example.vector3)
# get the minimum value
min(example.vector3)
# get the mean
mean(example.vector3)
# Chunk 18
character.vector1 <- c("R", "is", "easy","free","great")
character.vector1
character.vector1[c(1,2,3)]
character.vector1[c(1,2,5)]
character.vector1[-c(3,5)]
# Chunk 19
class(character.vector1)
class(example.vector)
class(example.vector2)
# Chunk 21
example.matrix1 <- matrix(1:6, nrow = 2)
example.matrix2 <- matrix(1:6, ncol = 2)
example.matrix3 <- matrix(1:6, nrow = 2, ncol = 3)
example.matrix4 <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
example.matrix1
example.matrix2
example.matrix3
example.matrix4
# Chunk 22
dim(example.matrix4)
# The results are row x columns
# Chunk 23
example.matrix4[1,2]
example.matrix4[1:2,1]
# selecting a row
example.matrix4[1,]
# selecting a column
example.matrix4[,2]
# Chunk 24
t(example.matrix4)
# Chunk 25
rownames(example.matrix4) <- c("row1","row2")
colnames(example.matrix4) <- c("column1","column2","column3")
example.matrix4
# Chunk 26
character.matrix <- matrix(c("a","b","c","d","e","f"), nrow = 2, ncol = 3, byrow=TRUE)
character.matrix
#Not the statistical mode/ Storage mode of an object
mode(example.matrix4)
mode(character.matrix)
question2 <- matrix(c(1,2,3), nrow = 2, ncol = 3, byrow = TRUE)
question3 <- matrix(c(1,2,3,4), nrow = 2, ncol = 3, byrow = TRUE)
question2
question3
question4 <- matrix(c(1,2,Three), nrow = 2, ncol = 3, byrow = TRUE)
question5 <- matrix(c(1,2,"Three"), nrow = 2, ncol = 3, byrow = TRUE)
numbers <- c(1:4)
characters <- c("a","b","c","d")
# The stringsAsFactors option prevents converting strings to factors
example.data.frame <- data.frame(numbers,characters, stringsAsFactors = FALSE)
example.data.frame
class(example.data.frame[,1])
class(example.data.frame[,2])
example.data.frame
question5
# Chunk 6
dir()
list.files()  # does the same thing
# Chunk 7
101+127
# Chunk 8
2 * 4
# Chunk 9
6 / 3
# Chunk 10
( (6 / 3) + ( 9 / (1+2) ) - 2.3 )^2
# Chunk 11
log(10)     # log with base e
log2(8)     # log with base 2
log10(1000) # log with base 10
exp(4)      # exponentials
sqrt(36)    # square roots
abs( 10 - 15 ) # absolute values
# Chunk 12
?log
?log10
# Chunk 13
number.of.students <- 50
male.ratio <- 0.4
number.of.males <- number.of.students * male.ratio
number.of.females <- number.of.students * (1 - male.ratio)
# Chunk 14
number.of.males
number.of.females
# Chunk 15
example.vector <- c(1.1,3,5.3,7,9.0)
example.vector
example.vector2 <- 1:10
example.vector2
example.vector3 <- seq(from=1, to = 12, by = 3)
example.vector3
# Chunk 16
example.vector[3]
# access multiple values
example.vector2[c(1,2)]
# access every value except position 2
example.vector2[-2]
# Chunk 17
# get the maximum value
max(example.vector3)
# get the minimum value
min(example.vector3)
# get the mean
mean(example.vector3)
# Chunk 18
character.vector1 <- c("R", "is", "easy","free","great")
character.vector1
character.vector1[c(1,2,3)]
character.vector1[c(1,2,5)]
character.vector1[-c(3,5)]
# Chunk 19
class(character.vector1)
class(example.vector)
class(example.vector2)
# Chunk 21
example.matrix1 <- matrix(1:6, nrow = 2)
example.matrix2 <- matrix(1:6, ncol = 2)
example.matrix3 <- matrix(1:6, nrow = 2, ncol = 3)
example.matrix4 <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
example.matrix1
example.matrix2
example.matrix3
example.matrix4
# Chunk 22
dim(example.matrix4)
# The results are row x columns
# Chunk 23
example.matrix4[1,2]
example.matrix4[1:2,1]
# selecting a row
example.matrix4[1,]
# selecting a column
example.matrix4[,2]
# Chunk 24
t(example.matrix4)
# Chunk 25
rownames(example.matrix4) <- c("row1","row2")
colnames(example.matrix4) <- c("column1","column2","column3")
example.matrix4
# Chunk 26
character.matrix <- matrix(c("a","b","c","d","e","f"), nrow = 2, ncol = 3, byrow=TRUE)
character.matrix
#Not the statistical mode/ Storage mode of an object
mode(example.matrix4)
mode(character.matrix)
# Chunk 29
numbers <- c(1:4)
characters <- c("a","b","c","d")
# The stringsAsFactors option prevents converting strings to factors
example.data.frame <- data.frame(numbers,characters, stringsAsFactors = FALSE)
example.data.frame
class(example.data.frame[,1])
class(example.data.frame[,2])
# Chunk 30
converted.data.frame <- as.data.frame(example.matrix4)
converted.data.frame
class(converted.data.frame)
# Chunk 31
example.data.frame[1,1]
example.data.frame[2,]
example.data.frame$numbers
example.data.frame[1,] <- c(5,5)
example.data.frame[1,] <- c("e", "e")
example.data.frame
example.list <- list() # declaring a list
example.list$place1 <- example.vector3
example.list$place2 <- example.matrix4
example.list$place3 <- example.data.frame
str(example.list)
example.list
QG16.lab.1 <- read.table("./QG16-lab1-data.csv", sep = ",", header = TRUE)
QG16.lab.2 <- read.csv("./QG16-lab1-data.csv", header = TRUE)
setwd('Desktop/Courses/2017 Spring/BTRY6830/QG16_computerlab/Lab1/')
QG16.lab.2 <- read.csv("./QG16-lab1-data.csv", header = TRUE)
QG16.lab.1 <- read.table("./QG16-lab1-data.csv", sep = ",", header = TRUE)
QG16.lab.1
QG16.lab.2
QG16.lab.1
(QG16.lab.1)
dim(QG16.lab.1)
dim(QG16.lab.2)
QG16.lab.1.only.a <- subset(QG16.lab.1, factor1 == "a")
dim(QG16.lab.1.only.a)
?write.table
QG17.lab.1.only.a <- subset(QG1.lab.1, factor1 == "a")
# Chunk 6
dir()
list.files()  # does the same thing
# Chunk 7
101+127
# Chunk 8
2 * 4
# Chunk 9
6 / 3
# Chunk 10
( (6 / 3) + ( 9 / (1+2) ) - 2.3 )^2
# Chunk 11
log(10)     # log with base e
log2(8)     # log with base 2
log10(1000) # log with base 10
exp(4)      # exponentials
sqrt(36)    # square roots
abs( 10 - 15 ) # absolute values
# Chunk 12
?log
?log10
# Chunk 13
number.of.students <- 50
male.ratio <- 0.4
number.of.males <- number.of.students * male.ratio
number.of.females <- number.of.students * (1 - male.ratio)
# Chunk 14
number.of.males
number.of.females
# Chunk 15
example.vector <- c(1.1,3,5.3,7,9.0)
example.vector
example.vector2 <- 1:10
example.vector2
example.vector3 <- seq(from=1, to = 12, by = 3)
example.vector3
# Chunk 16
example.vector[3]
# access multiple values
example.vector2[c(1,2)]
# access every value except position 2
example.vector2[-2]
# Chunk 17
# get the maximum value
max(example.vector3)
# get the minimum value
min(example.vector3)
# get the mean
mean(example.vector3)
# Chunk 18
character.vector1 <- c("R", "is", "easy","free","great")
character.vector1
character.vector1[c(1,2,3)]
character.vector1[c(1,2,5)]
character.vector1[-c(3,5)]
# Chunk 19
class(character.vector1)
class(example.vector)
class(example.vector2)
# Chunk 21
example.matrix1 <- matrix(1:6, nrow = 2)
example.matrix2 <- matrix(1:6, ncol = 2)
example.matrix3 <- matrix(1:6, nrow = 2, ncol = 3)
example.matrix4 <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
example.matrix1
example.matrix2
example.matrix3
example.matrix4
# Chunk 22
dim(example.matrix4)
# The results are row x columns
# Chunk 23
example.matrix4[1,2]
example.matrix4[1:2,1]
# selecting a row
example.matrix4[1,]
# selecting a column
example.matrix4[,2]
# Chunk 24
t(example.matrix4)
# Chunk 25
rownames(example.matrix4) <- c("row1","row2")
colnames(example.matrix4) <- c("column1","column2","column3")
example.matrix4
# Chunk 26
character.matrix <- matrix(c("a","b","c","d","e","f"), nrow = 2, ncol = 3, byrow=TRUE)
character.matrix
#Not the statistical mode/ Storage mode of an object
mode(example.matrix4)
mode(character.matrix)
# Chunk 29
numbers <- c(1:4)
characters <- c("a","b","c","d")
# The stringsAsFactors option prevents converting strings to factors
example.data.frame <- data.frame(numbers,characters, stringsAsFactors = FALSE)
example.data.frame
class(example.data.frame[,1])
class(example.data.frame[,2])
# Chunk 30
converted.data.frame <- as.data.frame(example.matrix4)
converted.data.frame
class(converted.data.frame)
# Chunk 31
example.data.frame[1,1]
example.data.frame[2,]
example.data.frame$numbers
# Chunk 33
example.list <- list() # declaring a list
example.list$place1 <- example.vector3
example.list$place2 <- example.matrix4
example.list$place3 <- example.data.frame
# Chunk 34
str(example.list)
# Chunk 35
example.list[[1]]
example.list[[2]]
example.list$place3
# Chunk 36
example.list[[1]][2]
example.list[[2]][,1]
example.list$place3[,1]
# Chunk 37
ls()
# Chunk 38
rm(example.list)
ls()
# Chunk 39
QG17.lab.1 <- read.table("./QG17-lab1-data.csv", sep = ",", header = TRUE)
QG17.lab.2 <- read.csv("./QG17-lab1-data.csv", header = TRUE)
# Chunk 40
dim(QG17.lab.1)
head(QG17.lab.1)     # displays the first 10 rows of the data
tail(QG17.lab.1)
rownames(QG17.lab.1)
colnames(QG17.lab.1) # checking the column names of the data
# Chunk 41
QG17.lab.1.only.a <- subset(QG17.lab.1, factor1 == "a")
QG17.lab.1.only.a
# Chunk 42
write.table(QG17.lab.1.only.a, file = "./QG17_subset_only_a.csv", sep = ",", quote= FALSE, row.names=FALSE)
# the quote options remove the "" of the entries. try it with quote = TRUE and see how it is different.
# row.names = FALSE eliminates the numbers in front of each row
